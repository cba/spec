//
// 商品中心
//
// 设计中

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v4.22.0--rc2
// source: product.proto

package product

import (
	base "github.com/cba/spec/go/base"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Attr详情
type AttrItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                        // 数据ID,创建时传0
	Name         string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                                     // 属性名
	Desc         string `protobuf:"bytes,3,opt,name=desc,proto3" json:"desc,omitempty"`                                     // 属性描述
	Key          string `protobuf:"bytes,4,opt,name=key,proto3" json:"key,omitempty"`                                       // AttrKey
	IsImportant  bool   `protobuf:"varint,5,opt,name=is_important,json=isImportant,proto3" json:"is_important,omitempty"`   // 是否重要属性 0否 1是
	IsRequired   bool   `protobuf:"varint,6,opt,name=is_required,json=isRequired,proto3" json:"is_required,omitempty"`      // 是否必填 0否 1是
	IsCustom     bool   `protobuf:"varint,7,opt,name=is_custom,json=isCustom,proto3" json:"is_custom,omitempty"`            // 是否自定义添加 0否 1是
	FormType     string `protobuf:"bytes,8,opt,name=form_type,json=formType,proto3" json:"form_type,omitempty"`             // form类型 input, select, checkbox
	FormOptional string `protobuf:"bytes,9,opt,name=form_optional,json=formOptional,proto3" json:"form_optional,omitempty"` // form类型 input时，默认值，select, checkbox时,可选范围项
	CustomLabel  string `protobuf:"bytes,10,opt,name=custom_label,json=customLabel,proto3" json:"custom_label,omitempty"`   // 自定义标签
	Sort         int64  `protobuf:"varint,11,opt,name=sort,proto3" json:"sort,omitempty"`                                   // 排序
	Status       int64  `protobuf:"varint,12,opt,name=status,proto3" json:"status,omitempty"`                               // 状态
}

func (x *AttrItem) Reset() {
	*x = AttrItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AttrItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttrItem) ProtoMessage() {}

func (x *AttrItem) ProtoReflect() protoreflect.Message {
	mi := &file_product_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttrItem.ProtoReflect.Descriptor instead.
func (*AttrItem) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{0}
}

func (x *AttrItem) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AttrItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AttrItem) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *AttrItem) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *AttrItem) GetIsImportant() bool {
	if x != nil {
		return x.IsImportant
	}
	return false
}

func (x *AttrItem) GetIsRequired() bool {
	if x != nil {
		return x.IsRequired
	}
	return false
}

func (x *AttrItem) GetIsCustom() bool {
	if x != nil {
		return x.IsCustom
	}
	return false
}

func (x *AttrItem) GetFormType() string {
	if x != nil {
		return x.FormType
	}
	return ""
}

func (x *AttrItem) GetFormOptional() string {
	if x != nil {
		return x.FormOptional
	}
	return ""
}

func (x *AttrItem) GetCustomLabel() string {
	if x != nil {
		return x.CustomLabel
	}
	return ""
}

func (x *AttrItem) GetSort() int64 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *AttrItem) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

// Attr列表
type AttrListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*AttrItem `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`  // 列表
	Total int64       `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"` // 总数
}

func (x *AttrListResp) Reset() {
	*x = AttrListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AttrListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttrListResp) ProtoMessage() {}

func (x *AttrListResp) ProtoReflect() protoreflect.Message {
	mi := &file_product_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttrListResp.ProtoReflect.Descriptor instead.
func (*AttrListResp) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{1}
}

func (x *AttrListResp) GetItems() []*AttrItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *AttrListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

// Group 详情
type GroupItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64       `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                     // 数据ID,创建时传0
	GroupType   string      `protobuf:"bytes,2,opt,name=group_type,json=groupType,proto3" json:"group_type,omitempty"`       // 分组类型 base基础属性, sale销售属性, categ类别属性
	Name        string      `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`                                  // 分组名称
	Desc        string      `protobuf:"bytes,4,opt,name=desc,proto3" json:"desc,omitempty"`                                  // 分组描述
	CustomLabel string      `protobuf:"bytes,5,opt,name=custom_label,json=customLabel,proto3" json:"custom_label,omitempty"` // 自定义标签
	Sort        int64       `protobuf:"varint,6,opt,name=sort,proto3" json:"sort,omitempty"`                                 // 排序
	Status      int64       `protobuf:"varint,7,opt,name=status,proto3" json:"status,omitempty"`                             // 状态
	Items       []*AttrItem `protobuf:"bytes,8,rep,name=items,proto3" json:"items,omitempty"`                                // 属性列表
}

func (x *GroupItem) Reset() {
	*x = GroupItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupItem) ProtoMessage() {}

func (x *GroupItem) ProtoReflect() protoreflect.Message {
	mi := &file_product_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupItem.ProtoReflect.Descriptor instead.
func (*GroupItem) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{2}
}

func (x *GroupItem) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GroupItem) GetGroupType() string {
	if x != nil {
		return x.GroupType
	}
	return ""
}

func (x *GroupItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GroupItem) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *GroupItem) GetCustomLabel() string {
	if x != nil {
		return x.CustomLabel
	}
	return ""
}

func (x *GroupItem) GetSort() int64 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *GroupItem) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *GroupItem) GetItems() []*AttrItem {
	if x != nil {
		return x.Items
	}
	return nil
}

// Group 列表
type GroupListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*GroupItem `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`  // 列表
	Total int64        `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"` // 总数
}

func (x *GroupListResp) Reset() {
	*x = GroupListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupListResp) ProtoMessage() {}

func (x *GroupListResp) ProtoReflect() protoreflect.Message {
	mi := &file_product_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupListResp.ProtoReflect.Descriptor instead.
func (*GroupListResp) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{3}
}

func (x *GroupListResp) GetItems() []*GroupItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *GroupListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

// Category 详情
type CategoryItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                     // 数据ID,创建时传0
	Pid         int64  `protobuf:"varint,2,opt,name=pid,proto3" json:"pid,omitempty"`                                   // 父ID
	Name        string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`                                  // 分类名称
	Desc        string `protobuf:"bytes,4,opt,name=desc,proto3" json:"desc,omitempty"`                                  // 分类描述
	PicUrl      string `protobuf:"bytes,5,opt,name=pic_url,json=picUrl,proto3" json:"pic_url,omitempty"`                // 分类图片
	Sort        int64  `protobuf:"varint,6,opt,name=sort,proto3" json:"sort,omitempty"`                                 // 排序
	CustomLabel string `protobuf:"bytes,7,opt,name=custom_label,json=customLabel,proto3" json:"custom_label,omitempty"` // 自定义标签
	IsLeaf      int64  `protobuf:"varint,8,opt,name=is_leaf,json=isLeaf,proto3" json:"is_leaf,omitempty"`               // 是否为叶子分类
	Status      int64  `protobuf:"varint,9,opt,name=status,proto3" json:"status,omitempty"`                             // 状态 1:enable, 0:disable
}

func (x *CategoryItem) Reset() {
	*x = CategoryItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CategoryItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CategoryItem) ProtoMessage() {}

func (x *CategoryItem) ProtoReflect() protoreflect.Message {
	mi := &file_product_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CategoryItem.ProtoReflect.Descriptor instead.
func (*CategoryItem) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{4}
}

func (x *CategoryItem) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CategoryItem) GetPid() int64 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *CategoryItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CategoryItem) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *CategoryItem) GetPicUrl() string {
	if x != nil {
		return x.PicUrl
	}
	return ""
}

func (x *CategoryItem) GetSort() int64 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *CategoryItem) GetCustomLabel() string {
	if x != nil {
		return x.CustomLabel
	}
	return ""
}

func (x *CategoryItem) GetIsLeaf() int64 {
	if x != nil {
		return x.IsLeaf
	}
	return 0
}

func (x *CategoryItem) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

// Category 列表
type CategoryListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*CategoryItem `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`  // 列表
	Total int64           `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"` // 总数
}

func (x *CategoryListResp) Reset() {
	*x = CategoryListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CategoryListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CategoryListResp) ProtoMessage() {}

func (x *CategoryListResp) ProtoReflect() protoreflect.Message {
	mi := &file_product_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CategoryListResp.ProtoReflect.Descriptor instead.
func (*CategoryListResp) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{5}
}

func (x *CategoryListResp) GetItems() []*CategoryItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *CategoryListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type ProductSku struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int64          `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                                  // 数据ID,创建时传0
	SpecNo         string         `protobuf:"bytes,2,opt,name=spec_no,json=specNo,proto3" json:"spec_no,omitempty"`                             // attrs md5后的字符串
	Attrs          []*ProductAttr `protobuf:"bytes,3,rep,name=attrs,proto3" json:"attrs,omitempty"`                                             // 销售属性值{attr_id}:{attr_value},{attr_id}:{attr_value} 多个销售属性值逗号分隔
	CoverUrl       string         `protobuf:"bytes,4,opt,name=cover_url,json=coverUrl,proto3" json:"cover_url,omitempty"`                       // 商品介绍主图 多个图片逗号分隔
	InStock        int64          `protobuf:"varint,5,opt,name=in_stock,json=inStock,proto3" json:"in_stock,omitempty"`                         // 库存
	Sales          int64          `protobuf:"varint,6,opt,name=sales,proto3" json:"sales,omitempty"`                                            // 销量
	CustomLabel    string         `protobuf:"bytes,7,opt,name=custom_label,json=customLabel,proto3" json:"custom_label,omitempty"`              // 自定义标签
	PriceFee       int64          `protobuf:"varint,8,opt,name=price_fee,json=priceFee,proto3" json:"price_fee,omitempty"`                      // 售价，整数方式保存
	ConsignPrice   int64          `protobuf:"varint,9,opt,name=consign_price,json=consignPrice,proto3" json:"consign_price,omitempty"`          // 市场价，整数方式保存
	MarketPriceFee int64          `protobuf:"varint,10,opt,name=market_price_fee,json=marketPriceFee,proto3" json:"market_price_fee,omitempty"` // 成本价，整数方式保存
	Status         int64          `protobuf:"varint,11,opt,name=status,proto3" json:"status,omitempty"`                                         // 状态 1:enable, 0:disable
}

func (x *ProductSku) Reset() {
	*x = ProductSku{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductSku) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductSku) ProtoMessage() {}

func (x *ProductSku) ProtoReflect() protoreflect.Message {
	mi := &file_product_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductSku.ProtoReflect.Descriptor instead.
func (*ProductSku) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{6}
}

func (x *ProductSku) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ProductSku) GetSpecNo() string {
	if x != nil {
		return x.SpecNo
	}
	return ""
}

func (x *ProductSku) GetAttrs() []*ProductAttr {
	if x != nil {
		return x.Attrs
	}
	return nil
}

func (x *ProductSku) GetCoverUrl() string {
	if x != nil {
		return x.CoverUrl
	}
	return ""
}

func (x *ProductSku) GetInStock() int64 {
	if x != nil {
		return x.InStock
	}
	return 0
}

func (x *ProductSku) GetSales() int64 {
	if x != nil {
		return x.Sales
	}
	return 0
}

func (x *ProductSku) GetCustomLabel() string {
	if x != nil {
		return x.CustomLabel
	}
	return ""
}

func (x *ProductSku) GetPriceFee() int64 {
	if x != nil {
		return x.PriceFee
	}
	return 0
}

func (x *ProductSku) GetConsignPrice() int64 {
	if x != nil {
		return x.ConsignPrice
	}
	return 0
}

func (x *ProductSku) GetMarketPriceFee() int64 {
	if x != nil {
		return x.MarketPriceFee
	}
	return 0
}

func (x *ProductSku) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

type ProductAttr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AttrId int64  `protobuf:"varint,1,opt,name=attr_id,json=attrId,proto3" json:"attr_id,omitempty"` // 属性ID
	Value  string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`                  // 属性值
}

func (x *ProductAttr) Reset() {
	*x = ProductAttr{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductAttr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductAttr) ProtoMessage() {}

func (x *ProductAttr) ProtoReflect() protoreflect.Message {
	mi := &file_product_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductAttr.ProtoReflect.Descriptor instead.
func (*ProductAttr) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{7}
}

func (x *ProductAttr) GetAttrId() int64 {
	if x != nil {
		return x.AttrId
	}
	return 0
}

func (x *ProductAttr) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type ProductAttrGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId   int64          `protobuf:"varint,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`      // 分组ID
	GroupName string         `protobuf:"bytes,2,opt,name=group_name,json=groupName,proto3" json:"group_name,omitempty"` // 分组名称
	Attrs     []*ProductAttr `protobuf:"bytes,3,rep,name=attrs,proto3" json:"attrs,omitempty"`                          // 销售属性
}

func (x *ProductAttrGroup) Reset() {
	*x = ProductAttrGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductAttrGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductAttrGroup) ProtoMessage() {}

func (x *ProductAttrGroup) ProtoReflect() protoreflect.Message {
	mi := &file_product_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductAttrGroup.ProtoReflect.Descriptor instead.
func (*ProductAttrGroup) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{8}
}

func (x *ProductAttrGroup) GetGroupId() int64 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *ProductAttrGroup) GetGroupName() string {
	if x != nil {
		return x.GroupName
	}
	return ""
}

func (x *ProductAttrGroup) GetAttrs() []*ProductAttr {
	if x != nil {
		return x.Attrs
	}
	return nil
}

// Product 详情
type ProductItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int64               `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                                  // 数据ID,创建时传0
	CategoryId     int64               `protobuf:"varint,2,opt,name=category_id,json=categoryId,proto3" json:"category_id,omitempty"`                // 分类ID
	Name           string              `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`                                               // 商品名称
	InStock        int64               `protobuf:"varint,4,opt,name=in_stock,json=inStock,proto3" json:"in_stock,omitempty"`                         // 库存
	Sales          int64               `protobuf:"varint,5,opt,name=sales,proto3" json:"sales,omitempty"`                                            // 已售数量
	CoverUrl       string              `protobuf:"bytes,6,opt,name=cover_url,json=coverUrl,proto3" json:"cover_url,omitempty"`                       // 封面图
	VideoUrl       string              `protobuf:"bytes,7,opt,name=video_url,json=videoUrl,proto3" json:"video_url,omitempty"`                       // 介绍视频
	IsRecommend    bool                `protobuf:"varint,8,opt,name=is_recommend,json=isRecommend,proto3" json:"is_recommend,omitempty"`             // 是否推荐
	PriceFee       int64               `protobuf:"varint,9,opt,name=price_fee,json=priceFee,proto3" json:"price_fee,omitempty"`                      // 售价，整数方式保存
	MarketPriceFee int64               `protobuf:"varint,10,opt,name=market_price_fee,json=marketPriceFee,proto3" json:"market_price_fee,omitempty"` // 市场价，整数方式保存
	CustomLabel    int64               `protobuf:"varint,11,opt,name=custom_label,json=customLabel,proto3" json:"custom_label,omitempty"`            // 自定义标签
	ContentType    string              `protobuf:"bytes,12,opt,name=content_type,json=contentType,proto3" json:"content_type,omitempty"`             // 详情类型 容类型:html json
	Content        string              `protobuf:"bytes,13,opt,name=content,proto3" json:"content,omitempty"`                                        // 详情
	CateAttrs      []*ProductAttr      `protobuf:"bytes,14,rep,name=cate_attrs,json=cateAttrs,proto3" json:"cate_attrs,omitempty"`                   // 类目属性
	SaleGroup      []*ProductAttrGroup `protobuf:"bytes,15,rep,name=sale_group,json=saleGroup,proto3" json:"sale_group,omitempty"`                   // 销售属性
	Sku            []*ProductSku       `protobuf:"bytes,16,rep,name=sku,proto3" json:"sku,omitempty"`                                                // 销售规格
	Sort           int64               `protobuf:"varint,17,opt,name=sort,proto3" json:"sort,omitempty"`                                             // 排序
	Status         int64               `protobuf:"varint,18,opt,name=status,proto3" json:"status,omitempty"`                                         // 状态 1:enable, 0:disable
}

func (x *ProductItem) Reset() {
	*x = ProductItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductItem) ProtoMessage() {}

func (x *ProductItem) ProtoReflect() protoreflect.Message {
	mi := &file_product_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductItem.ProtoReflect.Descriptor instead.
func (*ProductItem) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{9}
}

func (x *ProductItem) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ProductItem) GetCategoryId() int64 {
	if x != nil {
		return x.CategoryId
	}
	return 0
}

func (x *ProductItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ProductItem) GetInStock() int64 {
	if x != nil {
		return x.InStock
	}
	return 0
}

func (x *ProductItem) GetSales() int64 {
	if x != nil {
		return x.Sales
	}
	return 0
}

func (x *ProductItem) GetCoverUrl() string {
	if x != nil {
		return x.CoverUrl
	}
	return ""
}

func (x *ProductItem) GetVideoUrl() string {
	if x != nil {
		return x.VideoUrl
	}
	return ""
}

func (x *ProductItem) GetIsRecommend() bool {
	if x != nil {
		return x.IsRecommend
	}
	return false
}

func (x *ProductItem) GetPriceFee() int64 {
	if x != nil {
		return x.PriceFee
	}
	return 0
}

func (x *ProductItem) GetMarketPriceFee() int64 {
	if x != nil {
		return x.MarketPriceFee
	}
	return 0
}

func (x *ProductItem) GetCustomLabel() int64 {
	if x != nil {
		return x.CustomLabel
	}
	return 0
}

func (x *ProductItem) GetContentType() string {
	if x != nil {
		return x.ContentType
	}
	return ""
}

func (x *ProductItem) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *ProductItem) GetCateAttrs() []*ProductAttr {
	if x != nil {
		return x.CateAttrs
	}
	return nil
}

func (x *ProductItem) GetSaleGroup() []*ProductAttrGroup {
	if x != nil {
		return x.SaleGroup
	}
	return nil
}

func (x *ProductItem) GetSku() []*ProductSku {
	if x != nil {
		return x.Sku
	}
	return nil
}

func (x *ProductItem) GetSort() int64 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *ProductItem) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

// Product 列表
type ProductListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*ProductItem `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`  // 列表
	Total int64          `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"` // 总数
}

func (x *ProductListResp) Reset() {
	*x = ProductListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductListResp) ProtoMessage() {}

func (x *ProductListResp) ProtoReflect() protoreflect.Message {
	mi := &file_product_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductListResp.ProtoReflect.Descriptor instead.
func (*ProductListResp) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{10}
}

func (x *ProductListResp) GetItems() []*ProductItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ProductListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

var File_product_proto protoreflect.FileDescriptor

var file_product_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x07, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x1a, 0x0a, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc6, 0x02, 0x0a, 0x08, 0x41, 0x74, 0x74, 0x72, 0x49, 0x74, 0x65,
	0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x69,
	0x73, 0x5f, 0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0b, 0x69, 0x73, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x6e, 0x74, 0x12, 0x1f,
	0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x12,
	0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x12, 0x1b, 0x0a, 0x09,
	0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x66, 0x6f, 0x72, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x66, 0x6f, 0x72,
	0x6d, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x66, 0x6f, 0x72, 0x6d, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x12, 0x21,
	0x0a, 0x0c, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x4c, 0x61, 0x62, 0x65,
	0x6c, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x4d, 0x0a,
	0x0c, 0x41, 0x74, 0x74, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x27, 0x0a,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x52,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0xda, 0x01, 0x0a,
	0x09, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73,
	0x63, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x6c, 0x61, 0x62, 0x65,
	0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x4c,
	0x61, 0x62, 0x65, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x27, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x4f, 0x0a, 0x0d, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x28, 0x0a, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0xd9, 0x01, 0x0a, 0x0c, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x70,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x70, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x69, 0x63, 0x5f, 0x75, 0x72, 0x6c,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x69, 0x63, 0x55, 0x72, 0x6c, 0x12, 0x12,
	0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x6f,
	0x72, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x6c, 0x61, 0x62,
	0x65, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x73, 0x5f, 0x6c, 0x65, 0x61, 0x66,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x69, 0x73, 0x4c, 0x65, 0x61, 0x66, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x55, 0x0a, 0x10, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2b, 0x0a, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x2e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0xd6, 0x02,
	0x0a, 0x0a, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x6b, 0x75, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07,
	0x73, 0x70, 0x65, 0x63, 0x5f, 0x6e, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x70, 0x65, 0x63, 0x4e, 0x6f, 0x12, 0x2a, 0x0a, 0x05, 0x61, 0x74, 0x74, 0x72, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x74, 0x74, 0x72, 0x52, 0x05, 0x61, 0x74, 0x74, 0x72,
	0x73, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x55, 0x72, 0x6c, 0x12, 0x19,
	0x0a, 0x08, 0x69, 0x6e, 0x5f, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x69, 0x6e, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x61, 0x6c,
	0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x12,
	0x21, 0x0a, 0x0c, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x4c, 0x61, 0x62,
	0x65, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x66, 0x65, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x72, 0x69, 0x63, 0x65, 0x46, 0x65, 0x65, 0x12,
	0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x73, 0x69, 0x67, 0x6e, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x73, 0x69, 0x67, 0x6e, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x5f, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e,
	0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x46, 0x65, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x3c, 0x0a, 0x0b, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x41, 0x74, 0x74, 0x72, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x74, 0x74, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x74, 0x74, 0x72, 0x49, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0x78, 0x0a, 0x10, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41,
	0x74, 0x74, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x05, 0x61, 0x74, 0x74, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x41, 0x74, 0x74, 0x72, 0x52, 0x05, 0x61, 0x74, 0x74, 0x72, 0x73, 0x22, 0xc9,
	0x04, 0x0a, 0x0b, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1f,
	0x0a, 0x0b, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x6e, 0x5f, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x69, 0x6e, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x12, 0x14,
	0x0a, 0x05, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73,
	0x61, 0x6c, 0x65, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x75, 0x72,
	0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x55, 0x72,
	0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x55, 0x72, 0x6c, 0x12, 0x21,
	0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x72, 0x69, 0x63, 0x65, 0x46, 0x65, 0x65, 0x12, 0x28,
	0x0a, 0x10, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x66,
	0x65, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x46, 0x65, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x33, 0x0a, 0x0a, 0x63, 0x61, 0x74, 0x65,
	0x5f, 0x61, 0x74, 0x74, 0x72, 0x73, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x74,
	0x74, 0x72, 0x52, 0x09, 0x63, 0x61, 0x74, 0x65, 0x41, 0x74, 0x74, 0x72, 0x73, 0x12, 0x38, 0x0a,
	0x0a, 0x73, 0x61, 0x6c, 0x65, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x0f, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x41, 0x74, 0x74, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x09, 0x73, 0x61,
	0x6c, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x25, 0x0a, 0x03, 0x73, 0x6b, 0x75, 0x18, 0x10,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x6b, 0x75, 0x52, 0x03, 0x73, 0x6b, 0x75, 0x12, 0x12,
	0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x6f,
	0x72, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x12, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x53, 0x0a, 0x0f, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2a, 0x0a,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x32,
	0xd9, 0x06, 0x0a, 0x07, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x32, 0x0a, 0x08, 0x41,
	0x74, 0x74, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x0d, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x2e, 0x41, 0x74, 0x74, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12,
	0x2e, 0x0a, 0x0a, 0x41, 0x74, 0x74, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x0b, 0x2e,
	0x62, 0x61, 0x73, 0x65, 0x2e, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x22, 0x00, 0x12,
	0x36, 0x0a, 0x12, 0x41, 0x74, 0x74, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e,
	0x41, 0x74, 0x74, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x1a, 0x0b, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x28, 0x0a, 0x0a, 0x41, 0x74, 0x74, 0x72, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x0b, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x49, 0x64, 0x52,
	0x65, 0x71, 0x1a, 0x0b, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22,
	0x00, 0x12, 0x34, 0x0a, 0x09, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x0d,
	0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x30, 0x0a, 0x0b, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x0b, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x49, 0x64,
	0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x49, 0x74, 0x65, 0x6d, 0x22, 0x00, 0x12, 0x38, 0x0a, 0x13, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x12, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x49, 0x74, 0x65, 0x6d, 0x1a, 0x0b, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x22, 0x00, 0x12, 0x29, 0x0a, 0x0b, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x12, 0x0b, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a,
	0x0b, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x3a,
	0x0a, 0x0c, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x0d,
	0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x36, 0x0a, 0x0e, 0x43, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x0b, 0x2e, 0x62,
	0x61, 0x73, 0x65, 0x2e, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x2e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d,
	0x22, 0x00, 0x12, 0x3e, 0x0a, 0x16, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x15, 0x2e, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49,
	0x74, 0x65, 0x6d, 0x1a, 0x0b, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x22, 0x00, 0x12, 0x2c, 0x0a, 0x0e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x12, 0x0b, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x49, 0x64, 0x52, 0x65,
	0x71, 0x1a, 0x0b, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00,
	0x12, 0x38, 0x0a, 0x0b, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x0d, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x18,
	0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x34, 0x0a, 0x0d, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x0b, 0x2e, 0x62, 0x61,
	0x73, 0x65, 0x2e, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x22, 0x00,
	0x12, 0x3c, 0x0a, 0x15, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x4f, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x1a,
	0x0b, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x2b,
	0x0a, 0x0d, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12,
	0x0b, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x0b, 0x2e, 0x62,
	0x61, 0x73, 0x65, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x42, 0x47, 0x0a, 0x15, 0x69,
	0x6f, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x62, 0x61, 0x2e, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x42, 0x0c, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x50, 0x01, 0x5a, 0x1e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x63, 0x62, 0x61, 0x2f, 0x73, 0x70, 0x65, 0x63, 0x2f, 0x67, 0x6f, 0x2f, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_product_proto_rawDescOnce sync.Once
	file_product_proto_rawDescData = file_product_proto_rawDesc
)

func file_product_proto_rawDescGZIP() []byte {
	file_product_proto_rawDescOnce.Do(func() {
		file_product_proto_rawDescData = protoimpl.X.CompressGZIP(file_product_proto_rawDescData)
	})
	return file_product_proto_rawDescData
}

var file_product_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_product_proto_goTypes = []interface{}{
	(*AttrItem)(nil),         // 0: product.AttrItem
	(*AttrListResp)(nil),     // 1: product.AttrListResp
	(*GroupItem)(nil),        // 2: product.GroupItem
	(*GroupListResp)(nil),    // 3: product.GroupListResp
	(*CategoryItem)(nil),     // 4: product.CategoryItem
	(*CategoryListResp)(nil), // 5: product.CategoryListResp
	(*ProductSku)(nil),       // 6: product.ProductSku
	(*ProductAttr)(nil),      // 7: product.ProductAttr
	(*ProductAttrGroup)(nil), // 8: product.ProductAttrGroup
	(*ProductItem)(nil),      // 9: product.ProductItem
	(*ProductListResp)(nil),  // 10: product.ProductListResp
	(*base.ListReq)(nil),     // 11: base.ListReq
	(*base.IdReq)(nil),       // 12: base.IdReq
	(*base.Empty)(nil),       // 13: base.Empty
}
var file_product_proto_depIdxs = []int32{
	0,  // 0: product.AttrListResp.items:type_name -> product.AttrItem
	0,  // 1: product.GroupItem.items:type_name -> product.AttrItem
	2,  // 2: product.GroupListResp.items:type_name -> product.GroupItem
	4,  // 3: product.CategoryListResp.items:type_name -> product.CategoryItem
	7,  // 4: product.ProductSku.attrs:type_name -> product.ProductAttr
	7,  // 5: product.ProductAttrGroup.attrs:type_name -> product.ProductAttr
	7,  // 6: product.ProductItem.cate_attrs:type_name -> product.ProductAttr
	8,  // 7: product.ProductItem.sale_group:type_name -> product.ProductAttrGroup
	6,  // 8: product.ProductItem.sku:type_name -> product.ProductSku
	9,  // 9: product.ProductListResp.items:type_name -> product.ProductItem
	11, // 10: product.Product.AttrList:input_type -> base.ListReq
	12, // 11: product.Product.AttrDetail:input_type -> base.IdReq
	0,  // 12: product.Product.AttrUpdateOrCreate:input_type -> product.AttrItem
	12, // 13: product.Product.AttrDelete:input_type -> base.IdReq
	11, // 14: product.Product.GroupList:input_type -> base.ListReq
	12, // 15: product.Product.GroupDetail:input_type -> base.IdReq
	2,  // 16: product.Product.GroupUpdateOrCreate:input_type -> product.GroupItem
	12, // 17: product.Product.GroupDelete:input_type -> base.IdReq
	11, // 18: product.Product.CategoryList:input_type -> base.ListReq
	12, // 19: product.Product.CategoryDetail:input_type -> base.IdReq
	4,  // 20: product.Product.CategoryUpdateOrCreate:input_type -> product.CategoryItem
	12, // 21: product.Product.CategoryDelete:input_type -> base.IdReq
	11, // 22: product.Product.ProductList:input_type -> base.ListReq
	12, // 23: product.Product.ProductDetail:input_type -> base.IdReq
	9,  // 24: product.Product.ProductUpdateOrCreate:input_type -> product.ProductItem
	12, // 25: product.Product.ProductDelete:input_type -> base.IdReq
	1,  // 26: product.Product.AttrList:output_type -> product.AttrListResp
	0,  // 27: product.Product.AttrDetail:output_type -> product.AttrItem
	13, // 28: product.Product.AttrUpdateOrCreate:output_type -> base.Empty
	13, // 29: product.Product.AttrDelete:output_type -> base.Empty
	3,  // 30: product.Product.GroupList:output_type -> product.GroupListResp
	2,  // 31: product.Product.GroupDetail:output_type -> product.GroupItem
	13, // 32: product.Product.GroupUpdateOrCreate:output_type -> base.Empty
	13, // 33: product.Product.GroupDelete:output_type -> base.Empty
	5,  // 34: product.Product.CategoryList:output_type -> product.CategoryListResp
	4,  // 35: product.Product.CategoryDetail:output_type -> product.CategoryItem
	13, // 36: product.Product.CategoryUpdateOrCreate:output_type -> base.Empty
	13, // 37: product.Product.CategoryDelete:output_type -> base.Empty
	10, // 38: product.Product.ProductList:output_type -> product.ProductListResp
	9,  // 39: product.Product.ProductDetail:output_type -> product.ProductItem
	13, // 40: product.Product.ProductUpdateOrCreate:output_type -> base.Empty
	13, // 41: product.Product.ProductDelete:output_type -> base.Empty
	26, // [26:42] is the sub-list for method output_type
	10, // [10:26] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_product_proto_init() }
func file_product_proto_init() {
	if File_product_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_product_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AttrItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AttrListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CategoryItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CategoryListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductSku); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductAttr); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductAttrGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_product_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_product_proto_goTypes,
		DependencyIndexes: file_product_proto_depIdxs,
		MessageInfos:      file_product_proto_msgTypes,
	}.Build()
	File_product_proto = out.File
	file_product_proto_rawDesc = nil
	file_product_proto_goTypes = nil
	file_product_proto_depIdxs = nil
}
